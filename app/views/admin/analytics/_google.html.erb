<div class="google_analytics_container">
<%
# Caso não possua o código de autenticação solicita a autorização

token   = Setting.for_key("rdcms.omniauth.google.token", false)
ga      = Analytic.new redirect_uri: url_for(controller: "/admin/analytics", :only_path => false)

if token.nil? or token.blank?
  code  = params[:code]
  if code.blank?
    %>
    <div class="navbar">
      <div class="navbar-inner">
        <div class="pull-right"> <%= ga.authorize_button %> </div>
      </div>
    </div>
    <%
  else
    ga.connect code

    if ga.error?
      %>
      <div class="navbar">
        <div class="navbar-inner">
          <div class="pull-right"> <%= ga.authorize_button %> </div>
        </div>
      </div>
      <div class="alert alert-error">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <%= ga.error_message %>
      </div>
      <%
    else
      oauth = ga.oauth2
      token = oauth.token
    end
  end
else
  oauth = ga.new_oauth token
  oauth = ga.refreshToken! if !oauth.nil? and oauth.expired?
end
# Caso a token ainda for inexistente interrompe a renderização da página
# return false if token.nil? or token.blank?
unless token.blank?
  # pusha lista de perfis
  rest = ga.get_json("https://www.googleapis.com/analytics/v3/management/accounts/~all/webproperties/~all/profiles")

  unless defined?(rest.code)
    rest_response = rest.parsed
    accounts_list   = []
    graphtype_list  = []
    account_selected = nil

    values = {
      "access_token"  =>  token,
      "id"            =>  rest_response["items"].first["id"],
      "start-date"    =>  Date.current.next_month(-1),
      "end-date"      =>  Date.current,
      "graphtype"     =>  "date"
    }.merge! params


    values["start-date" ] =  values["start-date"].to_date if values["start-date"].class.name == "String"
    values["end-date"   ] =  values["end-date"  ].to_date if values["end-date"  ].class.name == "String"

    # Cria lista de contas
    rest_response["items"].each do |account|
      options = { value: account["id"] }
      if account["id"] == values["id"]
        options[:selected] = "selected"
        account_selected = account
      end

      accounts_list << content_tag(:option, account["name"], options)
    end unless rest_response["items"].blank?

    # Cria lista de tipos de gráficos
    %w{ month date }.each do |type|
      options = { value: type }
      options[:selected] = "selected" if values["graphtype"] == type

      graphtype_list << content_tag(:option, I18n.t("admin.analytics.#{type}"), options)
    end

    %>
    <div class="navbar">
      <div class="navbar-inner">
        <a rel="tooltip" class="brand" href="https://www.google.com/analytics/web/" title="<%= I18n.t("admin.analytics.more_in_google_analytics") %>" target="_blank" >Google Analytics</a>

        <form id="analytics_integration_form" class="navbar-form pull-right form-inline analytics_integration_form" name="analytics_integration_form" method="get" action="/admin/analytics">
          <select name="id" id="id" title="<%= I18n.t("admin.analytics.profile") %>" rel="tooltip" >
            <%= accounts_list.join("\n").html_safe %>
          </select>

          <label for='end-date'><%= I18n.t("admin.analytics.start_date") %>:</label>
          <input id='start-date' readonly='readonly' type='text' value="<%= I18n.l values["start-date"] %>" title="<%= I18n.t("admin.analytics.start_date") %>" rel="tooltip" />
          <input type='hidden' name='start-date' id='start_alternate' value="<%= values["start-date"] %>" />

          <label for='end-date'><%= I18n.t("admin.analytics.end_date") %>:</label>
          <input id='end-date' readonly='readonly' type='text' value="<%= I18n.l values["end-date"] %>" title="<%= I18n.t("admin.analytics.end_date") %>" rel="tooltip" />
          <input type='hidden' name='end-date' id='end_alternate' value="<%= values["end-date"] %>" />

          <label for='end-date'><%= I18n.t("admin.analytics.type") %>:</label>
          <select name="graphtype" id="graphtype" title="<%= I18n.t("admin.analytics.type") %>" rel="tooltip" >
            <%= graphtype_list.join("\n").html_safe %>
          </select>

          <button class="btn btn-primary" type="submit" title="<%= I18n.t("admin.analytics.update") %>" rel="tooltip">
            <span class="icon-reload-CW" aria-hidden="true"></span>
          </button>
        </form>
      </div>
    </div>
    <%
  else
    ga.refreshToken! if rest.status == "401"
  end

  unless values.blank?
    # Adiciona API do Google Charts
    concat javascript_include_tag "https://www.google.com/jsapi"
    %>
    <script type="text/javascript">
      var google_charts = []
    </script>
    <%

    # paramâmetros padrões de busca
    query = { :ids          => "ga:#{account_selected["id"]}",
              :metrics      => "ga:visitors,ga:visits",
              :"start-date" => values["start-date"],
              :"end-date"   => values["end-date"] }

    # Verificar se end-date > start-date
    if values["start-date"] > values["end-date"]
      values.merge!("start-date"    =>  Date.current.next_month(-1),
                    "end-date"      =>  Date.current)
      %>
      <div class="alert alert-error">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <h4>Erro:</h4>
        A data de incício deve ser menor que a de término!
      </div>
      <%
    end



    # Puxa a métrica de visitas e visitantes em um intervalo de datas
    rest_metrics = ga.get_json("https://www.googleapis.com/analytics/v3/data/ga", query.merge!(:metrics => "ga:visitors,ga:visits"))

    if defined?(rest_metrics.code)
      # mostra mensagem de erro
      %>
      <div class="alert alert-error">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <h4>Erro:</h4>
        <%= rest_metrics.code["message"] %>
      </div>
      <%
    else
      rest_metrics_response  = rest_metrics.parsed
      metrics    = []

      rest_metrics_response["columnHeaders"].each do |header|
        metrics << content_tag(:div) do
          content_tag(:span, "#{I18n.t("admin.analytics.#{header["name"].gsub(/^ga:/, '')}")}: ", class: "name") + content_tag(:span, rest_metrics_response["totalsForAllResults"][header["name"]], class: "value")
        end
      end unless rest_metrics_response["columnHeaders"].blank?

      # lista os dados
      %>
      <h2 class="title"><%= I18n.t("admin.analytics.visits") %></h2>
      <div class="row">
        <div class="span4">
          <%= content_tag(:div, metrics.join.html_safe, class: "metrics") %>
        </div>
        <!-- # Gráfico de visitas -->
        <div class="span8">
          <%
          rest_g_visits_query = query.merge!( :metrics        => "ga:visits")

          if values["graphtype"] == "date"
            rest_g_visits_query = rest_g_visits_query.merge!(:dimensions  => "ga:date")
          else
            rest_g_visits_query = rest_g_visits_query.merge!( :dimensions => "ga:month,ga:year",
                                                              :sort       => "ga:year")
          end
          rest_g_visits = ga.get_json("https://www.googleapis.com/analytics/v3/data/ga", rest_g_visits_query)
          if defined?(rest_g_visits.code)
            # mostra mensagem de erro
            %>
            <div class="alert alert-error">
              <button type="button" class="close" data-dismiss="alert">x</button>
              <h4>Erro:</h4>
              <%= rest_g_visits.code["message"] %>
            </div>
            <%
          else
            rest_g_visits_response  = rest_g_visits.parsed
            %>
              <div class="visits_barchart"></div>
              <script type="text/javascript">
                // Gera gráfico das origens de tráfegos
                google_charts.push(function() {
                  var data = new google.visualization.DataTable();
                    data.addColumn('string', '<%= I18n.t("admin.analytics.day") %>');
                    data.addColumn('number', '<%= I18n.t("admin.analytics.visits") %>');
                    data.addRows(<%= rest_g_visits_response["totalResults"] %>);
                    <%
                    rest_g_visits_response["rows"].each_with_index do |row, row_key|
                      # Origem
                      if values["graphtype"] == "date"
                        date = I18n.l(row[0].insert(6, "-").insert(4, "-").to_date, format: :short_month)
                      else
                        date = I18n.l("#{row[0]}-#{row[1]}-01".to_date, format: :month)
                      end
                      concat "data.setValue(#{row_key},0,\"#{date}\")\n".html_safe
                      # Quantidade
                      concat "data.setValue(#{row_key},1,#{row.last})\n".html_safe
                      # data.setValue(<?php echo $row ?>,0,'<?php if ($visits_graph_type === "month"){echo date("M", mktime(0, 0, 0, $visits["month"]))." ".$visits["year"];}else{echo substr($visits['date'],6,2)."-".date('M', mktime(0, 0, 0, substr($visits['date'],4,2)))."-".substr($visits['date'],0,4);} ?>');
                    end unless rest_g_visits_response["rows"].blank?
                    %>
                  var chart = new google.visualization.AreaChart($(".visits_barchart")[0]);
                    chart.draw(data, {
                      title: '<%= I18n.t("admin.analytics.visits") %>',
                      height: 400
                    });
                });
              </script>
            <%
          end
          %>
        </div>
      </div>
      <%
    end



    # Origem de tráfefo
    rest_referrals = ga.get_json("https://www.googleapis.com/analytics/v3/data/ga", query.merge!( :metrics        => "ga:visits",
                                                                                                  :dimensions     => "ga:source",
                                                                                                  :sort           => "-ga:visits",
                                                                                                  :"max-results"  => "10"))

    if defined?(rest_referrals.code)
      # mostra mensagem de erro
      %>
      <div class="alert alert-error">
        <button type="button" class="close" data-dismiss="alert">x</button>
        <h4>Erro:</h4>
        <%= rest_referrals.code["message"] %>
      </div>
      <%
    else
      rest_referrals_response = rest_referrals.parsed

      dimensions    = []

      # Criar header ta tabela
      dimensions_h  = []
      rest_referrals_response["columnHeaders"].each { |header|
        dimensions_h << content_tag(:th, I18n.t("admin.analytics.#{header["name"].gsub(/^ga:/, '')}"))
      } unless rest_referrals_response["columnHeaders"].blank?
      dimensions << content_tag(:thead, content_tag(:tr, dimensions_h.join.html_safe))

      # Cria body da tabela
      dimensions_b  = []
      rest_referrals_response["rows"].each do |row|
        row_h = []
        row.each { |value| row_h << content_tag(:td, value) }
        dimensions_b << content_tag(:tr, row_h.join.html_safe)
      end unless rest_referrals_response["rows"].blank?
      dimensions << content_tag(:tbody, dimensions_b.join.html_safe)

      # lista os dados e graficos
      %>
      <hr class="page">

      <h2 class="title"><%= I18n.t("admin.analytics.referrals") %></h2>
      <div class="row">
        <div class="span4">
          <%= content_tag(:table, dimensions.join("\n").html_safe, class: "referrals") %>
        </div>
        <div class="span8">
          <div class="referrals_piechart"></div>
          <script type="text/javascript">
            // Gera gráfico das origens de tráfegos
            google_charts.push(function() {
              var data = new google.visualization.DataTable();
                data.addColumn('string', 'Referrer');
                data.addColumn('number', 'Visits');
                data.addRows(<%= rest_referrals_response["totalResults"] %>);
                <%
                rest_referrals_response["rows"].each_with_index do |row, row_key|
                  # Origem
                  concat "data.setValue(#{row_key},0,\"#{row[0]}\")\n".html_safe
                  # Quantidade
                  concat "data.setValue(#{row_key},1,#{row[1]})\n".html_safe
                end unless rest_referrals_response["rows"].blank?
                %>
              var chart = new google.visualization.PieChart($(".referrals_piechart")[0]);
                chart.draw(data, {height: 440, is3D: true, title: '<%= I18n.t("admin.analytics.referrer_visits") %>'});
            });
          </script>
        </div>
      </div>
      <%
    end


    %>
    <script type="text/javascript">
      google.load("visualization", "1.0", {packages:["corechart"]});
      // Carrega os graficos
      $.each(google_charts, function(k, v) { google.setOnLoadCallback(v); });
    </script>
    <%
  end
end
%>
</div>
